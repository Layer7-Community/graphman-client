type Query {
}

type Mutation {
    "Installs bundle of entities using set-based mutation operations"
    installBundleEntities: BundleEntitiesPayload

    "Deletes bundle of entities using set-based mutation operations"
    deleteBundleEntities: BundleEntitiesPayload
}

scalar NonEmptyString
scalar AnyObject

type BundleEntitiesPayload {
    summary: Boolean
    full: Boolean
}

type AnyProperty {
    "The name of property"
    name: String!
    "The value of the property"
    value: AnyObject
}

"An Entity Property"
type EntityProperty {
    "The name of property"
    name: String!
    "The value of the property"
    value: String!
}

input EntityPropertyInput {
    name: String!
    value: String!
}

enum EntityMutationAction {
    NEW_OR_UPDATE,
    NEW_OR_EXISTING,
    ALWAYS_CREATE_NEW,
    IGNORE,
    DELETE
}

enum EntityMutationStatus {
    NONE
    CREATED
    UPDATED
    DELETED
    USED_EXISTING
    IGNORED
    ERROR
}

type EntityMutationDetailedStatus {
    action: EntityMutationAction
    status: EntityMutationStatus!
    description: String

    source: [AnyProperty!]
    target: [AnyProperty!]
}

interface EntityMutationPayload {
    status: EntityMutationStatus!
    detailedStatus: EntityMutationDetailedStatus!
}

interface EntityMutationsPayload {
    status: [EntityMutationStatus!]!
    detailedStatus: [EntityMutationDetailedStatus!]!
}

interface PublishedService {
    "The name of the published service"
    name: String!
    "The resolution path for published service"
    resolutionPath: String
    "The folder path for published service"
    folderPath: String!
    "Which HTTP methods are permitted for incoming requests"
    methodsAllowed: [HttpMethod!]!
    "Whether published service is enabled"
    enabled: Boolean!
}

union HardwiredService = SoapService | WebApiService | L7Service

"Support Http methods for Web API Service"
enum HttpMethod {
    DELETE
    HEAD
    GET
    POST
    PUT
    OPTIONS
    PATCH
    OTHER
}

enum EntityFieldOption {
    DEFAULT
    NONE
    CUSTOM
}
