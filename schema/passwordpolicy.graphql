extend type Query {
    "Get Password Policy"
    passwordPolicy : PasswordPolicy!
    "Get Password Policies"
    passwordPolicies : [PasswordPolicy!]!
}

type PasswordPolicy {
    "The internal entity unique identifier"
    goid : ID!
    "The configuration checksum"
    checksum : String!
    "Force password change for new user and reset"
    forcePasswordChangeNewUser : Boolean!
    "To enable/disable no repeating characters"
    noRepeatingCharacters : Boolean!
    "Minimum Password Length - Enter the minimum number of characters ranging from 3 to 128 required for the password."
    minPasswordLength : Int!
    "Maximum Password Length - Enter the maximum number of characters ranging from 3 to 128 required for the password."
    maxPasswordLength : Int!
    "Set the number of uppercase letters that are required for the password. ranging from 1 to 128"
    upperMinimum : Int!
    "Set the number of lowercase letters that are required for the password. ranging from 1 to 128"
    lowerMinimum : Int!
    "Sets how many numbers (0-9) are required for the password. ranging from 1 to 128"
    numberMinimum : Int!
    "Sets how many symbol characters are required for the password. ranging from 1 to 128"
    symbolMinimum : Int!
    "Sets how many non numeric characters are required for the password. ranging from 1 to 128"
    nonNumericMinimum : Int!
    "Sets how many characters are required for the password. ranging from 1 to 128"
    charDiffMinimum : Int!
    "Enter the number of times, between 1 and 50, that a new password must be different from the current password"
    repeatFrequency : Int!
    "Days required for the password to be expired. ranging from 1 to 1825"
    passwordExpiry : Int!
    "Allow One Password Change Per 24 Hours"
    allowableChangesPerDay : Boolean!
}

extend type Mutation {
    "Set/Update the Password Policies"
    setPasswordPolicies(input : [PasswordPolicyInput!]!) : PasswordPoliciesPayLoad!
}

type PasswordPoliciesPayLoad {
    status: [EntityMutationStatus!]!
    detailedStatus: [EntityMutationDetailedStatus!]!
    passwordPolicies: [PasswordPolicy]!
}

input PasswordPolicyInput {
    "The internal entity unique identifier"
    goid : ID
    "Ignored at creation time but can be used to compare bundle with gw state"
    checksum : String
    "Force password change for new user and reset"
    forcePasswordChangeNewUser : Boolean!
    "To enable/disable no repeating characters"
    noRepeatingCharacters : Boolean!
    "Minimum Password Length - Enter the minimum number of characters ranging from 3 to 128 required for the password."
    minPasswordLength : Int!
    "Maximum Password Length - Enter the maximum number of characters ranging from 3 to 128 required for the password."
    maxPasswordLength : Int! = 32
    "Set the number of uppercase letters that are required for the password. ranging from 1 to 128"
    upperMinimum : Int! = 1
    "Set the number of lowercase letters that are required for the password. ranging from 1 to 128"
    lowerMinimum : Int! = 1
    "Sets how many numbers (0-9) are required for the password. ranging from 1 to 128"
    numberMinimum : Int! = 1
    "Sets how many symbol characters are required for the password. ranging from 1 to 128"
    symbolMinimum : Int! = 1
    "Sets how many non numeric characters are required for the password. ranging from 1 to 128"
    nonNumericMinimum : Int! = -1
    "Sets how many characters are required for the password. ranging from 1 to 128"
    charDiffMinimum : Int! = 4
    "Enter the number of times, between 1 and 50, that a new password must be different from the current password"
    repeatFrequency : Int! = 10
    "Days required for the password to be expired. ranging from 1 to 1825"
    passwordExpiry : Int! = 90
    "Allow One Password Change Per 24 Hours"
    allowableChangesPerDay : Boolean!
}
